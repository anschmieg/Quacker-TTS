name: Build & Release Fyne App

on:
  workflow_dispatch: # Allow manual triggering
  push:
    tags:
      - "v*.*.*" # Trigger on version tags like v1.0.0

jobs:
  build-macos-universal:
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Install Fyne CLI
        run: go install fyne.io/tools/cmd/fyne@latest
      - name: Fetch self-signed certificate
        run: |
          echo "${{ secrets.MACOS_CERT_P12_BASE64 }}" | base64 --decode > quacker-selfsigned.p12
      - name: Init temporary keychain
        run: |
          security create-keychain -p "temp_keychain_password" build.keychain
          security list-keychains -d user -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "temp_keychain_password" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
      - name: Import certificate to keychain
        run: |
          security import quacker-selfsigned.p12 -k build.keychain -P '${{ secrets.MACOS_CERT_PASSWORD }}' -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "temp_keychain_password" build.keychain
      - name: Build and codesign macOS App (Universal)
        run: |
          fyne package -os darwin -name 'Quacker' -app-id com.anschmieg.quacker -icon Icon.png
          codesign --deep --force --sign "anschmieg Apps" Quacker.app
      - name: Bundle macOS App
        run: zip -r Quacker-macOS-universal.zip Quacker.app
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Quacker-macOS-universal
          path: Quacker-macOS-universal.zip

  build-linux-and-windows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Install fyne-cross
        run: go install github.com/fyne-io/fyne-cross@latest

      # Linux build steps
      - name: Build Linux (x86_64)
        run: fyne-cross linux -arch=amd64 -name='Quacker' -app-id='com.anschmieg.quacker' -icon='Icon.png'
      - name: Debug Linux output directory after build
        run: ls -la fyne-cross/dist/linux-amd64
      - name: Check Linux binary exists
        run: test -f fyne-cross/dist/linux-amd64/Quacker && echo "Linux binary exists" || (echo "Linux binary missing!" && exit 1)
      - name: Archive Linux Build
        run: tar czvf Quacker-linux-x86_64.tar.gz -C fyne-cross/dist/linux-amd64 Quacker
      - name: Debug Linux archive
        run: ls -lh Quacker-linux-x86_64.tar.gz

      # Windows build steps
      - name: Build Windows (x86_64)
        run: fyne-cross windows -arch=amd64 -name='Quacker' -app-id='com.anschmieg.quacker' -icon='Icon.png'
      - name: Debug Windows output directory after build
        run: ls -la fyne-cross/dist/windows-amd64
      - name: Check Windows binary exists
        run: test -f fyne-cross/dist/windows-amd64/Quacker.exe && echo "Windows binary exists" || (echo "Windows binary missing!" && exit 1)
      - name: Zip Windows Build
        run: zip -j Quacker-windows-x86_64.zip fyne-cross/dist/windows-amd64/Quacker.exe
      - name: Debug Windows archive
        run: ls -lh Quacker-windows-x86_64.zip

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Quacker-Linux-x86_64
          path: Quacker-linux-x86_64.tar.gz
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Quacker-Windows-x86_64
          path: Quacker-windows-x86_64.zip

  release:
    needs: [build-macos-universal, build-linux-and-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: Quacker-macOS-universal
          path: release/macos-universal
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: Quacker-Linux-x86_64
          path: release/linux-x86_64
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: Quacker-Windows-x86_64
          path: release/windows-x86_64
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            release/macos-universal/Quacker-macOS-universal.zip
            release/linux-x86_64/Quacker-linux-x86_64.tar.gz
            release/windows-x86_64/Quacker-windows-x86_64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
